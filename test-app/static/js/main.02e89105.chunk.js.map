{"version":3,"sources":["reducers/index.js","store/index.js","localStorage.js","components/addCompany/addCompany.js","containers/addCompanyToStore.js","actions/index.js","components/companyItem/companyItem.js","components/companiesList/companiesList.js","containers/companiesListFromStore.js","components/app/App.js","index.js"],"names":["combineReducers","companies","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","companyName","filter","el","localState","stateFromLocal","localStorage","getItem","JSON","parse","err","loadState","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","addCompany","_ref","input","react_default","a","createElement","onSubmit","e","preventDefault","value","trim","ref","node","connect","dispatch","text","uuid","v4","addCompanyComponent","companyItem","removeCompany","className","onClick","companyList","map","company","components_companyItem_companyItem","key","companiesList","App","addCompanyToStore","companiesListFromStore","Component","store","subscribe","stateStringify","stringify","setItem","console","log","saveState","getState","ReactDOM","render","es","components_app_App","document","getElementById"],"mappings":"mRAmBeA,cAAgB,CAC7BC,UAlBuB,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOC,MACb,IAAK,cACH,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CACKP,GADL,CAEE,CACES,GAAIL,EAAOK,GACXC,YAAaN,EAAOM,eAG1B,IAAK,iBACH,OAAOV,EAAMW,OAAO,SAAAC,GAAE,OAAIA,EAAGH,KAAOL,EAAOK,KAC7C,QACE,OAAOT,MCXTa,ECJmB,WACrB,IACI,IAAMC,EAAiBC,aAAaC,QAAQ,SAC5C,OAAuB,OAAnBF,OACA,EAEOG,KAAKC,MAAMJ,GAExB,MAAOK,GACL,QDLWC,GAEJC,cACXC,EACAT,EACAU,OAAOC,8BAAgCD,OAAOC,gFEenCC,SAtBI,SAAAC,GAAoB,IACjCC,EADgBF,EAAiBC,EAAjBD,WAGpB,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEC,SAAU,SAAAC,GACRA,EAAEC,iBACGN,EAAMO,MAAMC,SAGjBV,EAAWE,EAAMO,OACjBP,EAAMO,MAAQ,MAGhBN,EAAAC,EAAAC,cAAA,SAAOM,IAAK,SAAAC,GAAI,OAAKV,EAAQU,KAC7BT,EAAAC,EAAAC,cAAA,UAAQzB,KAAK,UAAb,oCCNOiC,cAAQ,KARI,SAACC,GACxB,MAAO,CACHd,WAAY,SAACe,GACTD,ECLc,SAAAC,GAAI,MAAK,CACjCnC,KAAM,cACNI,GAAIgC,IAAKC,KACThC,YAAa8B,GDEMf,CAAWe,OAKjBF,CAAkCK,GEElCC,SAXK,SAAAlB,GAAA,IAAGmB,EAAHnB,EAAGmB,cAAeL,EAAlBd,EAAkBc,KAAlB,OAClBZ,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,gBACZlB,EAAAC,EAAAC,cAAA,YACKU,GAELZ,EAAAC,EAAAC,cAAA,UAAQgB,UAAU,uBAAuBC,QAAY,kBAAMF,MAA3D,qBCKWG,SATK,SAAAtB,GAAA,IAAG3B,EAAH2B,EAAG3B,UAAW8C,EAAdnB,EAAcmB,cAAd,OAClBjB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,uBACX/C,EAAUkD,IAAI,SAAAC,GAAO,OACpBtB,EAAAC,EAAAC,cAACqB,EAAD,CAAcC,IAAKF,EAAQzC,GAAI+B,KAAMU,EAAQxC,YAAamC,cAAgB,kBAAMA,EAAcK,EAAQzC,YCY7F6B,cAfS,SAAAtC,GACpB,MAAO,CACHD,UAAWC,EAAMD,YAKE,SAACwC,GACxB,MAAO,CACHM,cAAe,SAACpC,GACZ8B,EHNyB,CACnClC,KAAM,iBACNI,GGIkCA,OAKrB6B,CAA6Ce,GCH7CC,mLATX,OACE1B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACXlB,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,cALQC,aCGlBC,EAAMC,UAAU,YRKS,SAAC3D,GACtB,IACI,IAAM4D,EAAiB3C,KAAK4C,UAAU7D,GACtCe,aAAa+C,QAAQ,QAASF,GAChC,MAAOzC,GACL4C,QAAQC,IAAI7C,IQThB8C,CAAUP,EAAMQ,cAGpBC,IAASC,OACLxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAUX,MAAOA,GACb9B,EAAAC,EAAAC,cAACwC,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.02e89105.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nexport const companies = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'ADD_COMPANY':\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            companyName: action.companyName,\r\n          }\r\n        ]\r\n      case 'REMOVE_COMPANY':\r\n        return state.filter(el => el.id !== action.id)\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport default combineReducers({\r\n  companies,\r\n})","import { createStore } from 'redux';\r\nimport reducer from '../reducers/index';\r\nimport { loadState } from '../localStorage';\r\n\r\nconst localState = loadState();\r\n\r\nexport default createStore(\r\n    reducer,\r\n    localState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","export const loadState = () => {\r\n    try{\r\n        const stateFromLocal = localStorage.getItem('state');\r\n        if (stateFromLocal === null){\r\n            return undefined;\r\n        } else {\r\n            return JSON.parse(stateFromLocal);\r\n        }\r\n    } catch (err){\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try{\r\n        const stateStringify = JSON.stringify(state);\r\n        localStorage.setItem('state', stateStringify);\r\n    } catch (err){\r\n        console.log(err);\r\n    }\r\n}","import React from 'react'\r\n\r\nconst addCompany = ({ addCompany }) => {\r\n  let input;\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          if (!input.value.trim()) {\r\n            return\r\n          }\r\n          addCompany(input.value);\r\n          input.value = ''\r\n        }}\r\n      >\r\n        <input ref={node => (input = node)} />\r\n        <button type=\"submit\">Add Company</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default addCompany;","import addCompanyComponent from '../components/addCompany/addCompany';\r\nimport { connect } from 'react-redux';\r\nimport { addCompany } from '../actions/index'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCompany: (text) => {\r\n            dispatch(addCompany(text))\r\n        },\r\n    }\r\n  }\r\n  \r\nexport default connect(null, mapDispatchToProps)(addCompanyComponent)\r\n","import uuid from 'uuid';\r\n\r\nexport const addCompany = text => ({\r\n  type: 'ADD_COMPANY',\r\n  id: uuid.v4(),\r\n  companyName: text\r\n})\r\n\r\nexport const removeCompany = _id => ({\r\n  type: 'REMOVE_COMPANY',\r\n  id: _id\r\n})\r\n","import React from 'react';\r\nimport './companyItem.css';\r\n\r\nconst companyItem = ({ removeCompany, text }) => (\r\n  <li className=\"company-item\">\r\n    <span>\r\n        {text}\r\n    </span>\r\n    <button className=\"company-item__button\" onClick = { () => removeCompany()}>\r\n        Remove company\r\n    </button>\r\n  </li>\r\n)\r\n\r\nexport default companyItem;","import React from 'react'\r\nimport CompanyItem from '../companyItem/companyItem';\r\nimport './companiesList.css'\r\n\r\nconst companyList = ({ companies, removeCompany }) => (\r\n  <ul className=\"companies-list-wrap\">\r\n    {companies.map(company => (\r\n      <CompanyItem  key={company.id} text={company.companyName} removeCompany={ () => removeCompany(company.id)} />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\n\r\nexport default companyList;","import companiesList from '../components/companiesList/companiesList';\r\nimport { connect } from 'react-redux';\r\nimport {  removeCompany } from '../actions/index'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        companies: state.companies\r\n    }\r\n  }\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeCompany: (id) => {\r\n            dispatch( removeCompany(id))\r\n        },\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(companiesList)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport AddCompany from '../../containers/addCompanyToStore';\nimport CompaniesList from '../../containers/companiesListFromStore'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <AddCompany/>\n          <CompaniesList/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\nimport './index.css';\nimport App from './components/app/App';\nimport { saveState } from './localStorage'\n\nstore.subscribe(() => {\n    saveState(store.getState());\n})\n\nReactDOM.render(\n    <Provider store={store }>\n        <App/>\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}